import { useState, useEffect } from 'react';
import { collection, getDocs, addDoc, doc, updateDoc, deleteDoc } from 'firebase/firestore';
import { db } from './firebase';

export default function App() {
  const [users, setUsers] = useState([]);
  const [form, setForm] = useState({ name: '', phone: '', email: '' });
  const [editId, setEditId] = useState(null);

  // Load users
  useEffect(() => {
    const load = async () => {
      const snap = await getDocs(collection(db, 'users'));
      setUsers(snap.docs.map(d => ({ id: d.id, ...d.data() })));
    };
    load();
  }, []);

  // Submit form
  const handleSubmit = async e => {
    e.preventDefault();
    if (!form.name || !form.email.includes('@')) return;
    
    if (editId) {
      await updateDoc(doc(db, 'users', editId), form);
    } else {
      await addDoc(collection(db, 'users'), form);
    }
    
    // Refresh list
    const snap = await getDocs(collection(db, 'users'));
    setUsers(snap.docs.map(d => ({ id: d.id, ...d.data() })));
    setForm({ name: '', phone: '', email: '' });
    setEditId(null);
  };

  // Delete user
  const handleDelete = async id => {
    if (window.confirm('Delete?')) {
      await deleteDoc(doc(db, 'users', id));
      setUsers(users.filter(u => u.id !== id));
    }
  };

  return (
    <div>
      <h1>User CRUD</h1>
      
      <form onSubmit={handleSubmit}>
        <input
          value={form.name}
          onChange={e => setForm({...form, name: e.target.value})}
          placeholder="Name"
          required
        />
        <input
          value={form.phone}
          onChange={e => setForm({...form, phone: e.target.value.replace(/\D/g, '')})}
          placeholder="Phone"
        />
        <input
          value={form.email}
          onChange={e => setForm({...form, email: e.target.value})}
          placeholder="Email"
          type="email"
          required
        />
        <button type="submit">{editId ? 'Update' : 'Add'}</button>
        {editId && <button type="button" onClick={() => setEditId(null)}>Cancel</button>}
      </form>

      <ul>
        {users.map(user => (
          <li key={user.id}>
            {user.name} - {user.phone} - {user.email}
            <button onClick={() => { setForm(user); setEditId(user.id); }}>Edit</button>
            <button onClick={() => handleDelete(user.id)}>Delete</button>
          </li>
        ))}
      </ul>
    </div>
  );
}
